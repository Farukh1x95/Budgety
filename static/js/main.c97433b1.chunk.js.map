{"version":3,"sources":["Components/Database.js","Components/InputData.js","Components/BudgetHeader.js","Components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","records","payload","filter","id","Provider","dollar","mType","note","dispatch","setState","value","this","props","children","Component","Consumer","InputData","onChange","e","target","name","onSubmit","preventDefault","newRecords","uuid","Number","console","log","className","bind","key","required","placeholder","BudgetHeader","totalinc","i","map","c","totalexp","balance","Budget","deleteItem","one","onClick","exp","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c97433b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_BALANCE\":\r\n      return {\r\n        ...state,\r\n        records: [action.payload, ...state.records]\r\n      };\r\n    case \"DELETE_BALANCE\":\r\n      return {\r\n        ...state,\r\n        records: state.records.filter(records => records.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default class Provider extends Component {\r\n  state = {\r\n    records: [\r\n      {\r\n        id: \"\",\r\n        dollar: \"\",\r\n        mType: \"\",\r\n        note: \"\"\r\n      }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./Database\";\r\nimport uuid from \"uuid\";\r\n\r\nclass InputData extends Component {\r\n  state = {\r\n    mType: \"\",\r\n    note: \"\",\r\n    dollar: \"\"\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { mType, note, dollar } = this.state;\r\n    const newRecords = {\r\n      id: uuid(),\r\n      mType: mType,\r\n      note: note,\r\n      dollar: Number(dollar)\r\n    };\r\n    dispatch({ type: \"ADD_BALANCE\", payload: newRecords });\r\n    console.log(newRecords);\r\n  };\r\n\r\n  render() {\r\n    const { mType, note, dollar } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"d-flex justify-content-center align-items-center p-2 my-2 text-dark-50 bg-light rounded shadow-sm\">\r\n              <form\r\n                className=\"d-flex flex-wrap\"\r\n                onSubmit={this.onSubmit.bind(this, dispatch)}\r\n                key={this.id}\r\n              >\r\n                <div className=\"form-group col-6\">\r\n                  <select\r\n                    value={mType}\r\n                    className=\"form-control\"\r\n                    name=\"mType\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Choose</option>\r\n                    <option value={\"inc\"}>+</option>\r\n                    <option value={\"exp\"}>-</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-6\">\r\n                  <input\r\n                    className=\"add__description\"\r\n                    type=\"text\"\r\n                    name=\"note\"\r\n                    placeholder=\"Description\"\r\n                    value={note}\r\n                    onChange={this.onChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-6\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"dollar\"\r\n                    value={dollar}\r\n                    className=\"add__value\"\r\n                    placeholder=\"Value\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <button className=\"add__btn col-4\">\r\n                  <i className=\"ion-ios-checkmark-outline\"></i>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default InputData;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./Database\";\r\n\r\nclass BudgetHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { records } = value;\r\n\r\n          let totalinc = 0;\r\n          const incsum = records\r\n            .filter(i => i.mType === \"inc\")\r\n            .map(c => (totalinc += c.dollar));\r\n          console.log(`Total inc:  ${totalinc}`);\r\n\r\n          let totalexp = 0;\r\n          const expsum = records\r\n            .filter(i => i.mType === \"exp\")\r\n            .map(c => (totalexp += c.dollar));\r\n          console.log(`Total Exp:  ${totalexp}`);\r\n\r\n          let balance = totalinc - totalexp;\r\n\r\n          return (\r\n            <div>\r\n              <header className=\"container d-flex justify-content-center py-4 text-center\">\r\n                <div className=\"col-12 col-md-6 \">\r\n                  <p className=\"lead\">Available Bugdet </p>\r\n                  <h1 className=\"display-4\">+ ${balance} </h1>\r\n                  <div className=\"income-total rounded p-3 mb-2\">\r\n                    <h4 className=\"text-uppercase mb-0 text-left  \">\r\n                      Income: {console.log(records)}\r\n                      <span className=\"float-right\">+ ${totalinc}</span>\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"exp-total rounded p-3\">\r\n                    <h4 className=\"text-uppercase mb-0 text-left  \">\r\n                      Expensive:\r\n                      <span className=\"float-right\">- ${totalexp}</span>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </header>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BudgetHeader;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./Database\";\r\n\r\nclass Budget extends Component {\r\n  deleteItem = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_BALANCE\", payload: id });\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { records, dispatch } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              {/* {console.log(records)} */}\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <h4 className=\"text-uppercase mb-0 text-info\">Income</h4>\r\n                  <table className=\"table table-striped\">\r\n                    <tbody>\r\n                      {records.map(one =>\r\n                        one.mType === \"inc\" ? (\r\n                          <tr key={one.id}>\r\n                            <td>{one.note}</td>\r\n                            <td>$ {one.dollar}</td>\r\n                            <td\r\n                              onClick={this.deleteItem.bind(\r\n                                this,\r\n                                one.id,\r\n                                dispatch\r\n                              )}\r\n                            >\r\n                              <i className=\"del__btn ion-close-round\"></i>\r\n                            </td>\r\n                          </tr>\r\n                        ) : null\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <h4 className=\"text-uppercase mb-0 text-danger\">Expensive</h4>\r\n                  <table className=\"table table-striped\">\r\n                    <tbody>\r\n                      {records.map(exp =>\r\n                        exp.mType === \"exp\" ? (\r\n                          <tr key={exp.id}>\r\n                            <td>{exp.note}</td>\r\n                            <td>$ {exp.dollar}</td>\r\n                            <td\r\n                              onClick={this.deleteItem.bind(\r\n                                this,\r\n                                exp.id,\r\n                                dispatch\r\n                              )}\r\n                            >\r\n                              <i className=\"del__btn ion-close-round\"></i>\r\n                            </td>\r\n                          </tr>\r\n                        ) : null\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Budget;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Provider from \"./Components/Database\";\n\nimport InputData from \"./Components/InputData\";\nimport BudgetHeader from \"./Components/BudgetHeader\";\nimport Budget from \"./Components/Budget\";\n\nfunction App() {\n  return (\n    <Provider>\n      <div className=\"App\">\n        <BudgetHeader />\n        <InputData />\n        <Budget />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}